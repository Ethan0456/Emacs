;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(query-replace-history swiper-history woman-topic-history counsel-descbinds-history counsel-git-grep-history empty-history read-number-history ivy-history counsel-describe-symbol-history counsel-M-x-history evil-ex-history minibuffer-history-search-history command-history read-expression-history yes-or-no-p-history buffer-name-history file-name-history minibuffer-history extended-command-history))
(setq query-replace-history '("treemacs" "neotree"))
(setq swiper-history '(#("   \"/\" '(+consult/ripgrep :which-key \"+consult/ripgrep\")" 0 1 (display "30  " swiper-line-number 30 ivy-index 29) 1 3 (fontified t ivy-index 29) 3 6 (face font-lock-string-face fontified t ivy-index 29) 6 26 (fontified t ivy-index 29) 26 36 (face font-lock-builtin-face fontified t ivy-index 29) 36 37 (fontified t ivy-index 29) 37 55 (face font-lock-string-face fontified t ivy-index 29) 55 56 (fontified t ivy-index 29))))
(setq counsel-git-grep-history '(#("persp" 0 5 (ivy-index 0))))
(setq read-number-history '("1" "4" "3" "1" "2" "1" "9" "0" "1" "2" "1" "`" "2" "20" "10" "30" "2" "1" "2" "1" "2" "1" "2"))
(setq ivy-history '(#("main4" 0 5 (ivy-index 0)) #("main3" 0 5 (ivy-index 0)) #("main2" 0 5 (ivy-index 0)) #("main1" 0 5 (ivy-index 0)) #("second" 0 6 (ivy-index 0)) #("f" 0 1 (ivy-index 0)) #("t" 0 1 (ivy-index 0)) #("s" 0 1 (ivy-index 0)) #("fifth" 0 5 (ivy-index 0)) #("fourth" 0 6 (ivy-index 0)) #("third" 0 5 (ivy-index 0)) #("main" 0 4 (ivy-index 0)) #("scr" 0 3 (ivy-index 0)) "*scratch*" #("counsel-find-file" 0 17 (ivy-index 3)) "*scratch* (second)" #("doom-Iosvkem" 0 12 (ivy-index 1)) #("doom-cha" 0 8 (ivy-index 0)) "doom-challenger-deep" #("doom-one" 0 8 (ivy-index 1)) "*scratch*" #("bad" 0 3 (ivy-index 0)) "doom-badger" #("1337" 0 4 (ivy-index 0)) #("doom-1337" 0 9 (ivy-index 0))))
(setq counsel-describe-symbol-history '(#("^treemacs--icon" 0 15 (ivy-index 0)) "treemacs--icon-size" #("^treemacs size" 0 14 (ivy-index 0)) "treemacs--icon-size" #("^" 0 1 (ivy-index 1)) "evil-find-file-at-point-visual" "evil-find-file-at-point-visual"))
(setq counsel-M-x-history '(#("^check-parens" 0 13 (ivy-index 0)) "check-parens" #("^check-pa" 0 9 (ivy-index 0)) "check-parens" #("^" 0 1 (ivy-index 0)) "evil-collection-magit-toggle-text-minor-mode" "evil-collection-magit-toggle-text-minor-mode" "evil-collection-magit-toggle-text-minor-mode" "evil-collection-magit-toggle-text-minor-mode" #("^evil-l" 0 7 (ivy-index 3)) "evil-line" #("^persp-switch-by" 0 16 (ivy-index 0)) "persp-switch-by-number" #("^persp-switc" 0 12 (ivy-index 0)) "persp-switch-by-number" #("^persp" 0 6 (ivy-index 1)) "persp-switch-by-number" #("^hello" 0 6 (ivy-index 0)) "hello" "hello" #("^my" 0 3 (ivy-index 0)) "my-insert-command-value" "hello" #("^persp-swit" 0 11 (ivy-index 0)) "persp-switch-by-number" "check-parens"))
(setq evil-ex-history '(#("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1))))
(setq command-history '((find-file "~/.emacs.d/custom-vars.el" t) (evil-record-macro 10) (evil-record-macro 58) (check-parens) (check-parens) (evil-delete 3177 3178 'line nil nil) (evil-delete 3177 3214 'line nil nil) (evil-delete 3177 3201 'line nil nil) (evil-delete 3177 3208 'line nil nil) (evil-delete 3177 3205 'line nil nil) (evil-delete 3177 3201 'line nil nil) (evil-delete 3177 3200 'line nil nil) (evil-delete 3177 3209 'line nil nil) (evil-delete 3177 3189 'line nil nil) (evil-collection-magit-toggle-text-minor-mode 'toggle) (evil-collection-magit-toggle-text-minor-mode 'toggle) (check-parens) (execute-extended-command nil "check-parens" "check-par") (find-file "~/.emacs.d/package-list.el" t) (evil-set-marker 24) (check-parens) (execute-extended-command nil "check-parens" "check-pare") (evil-delete 3388 3433 'line nil nil) (find-file "~/.emacs.d/package-list.el" t) (find-file "~/.emacs.d/pac" t)))
(setq yes-or-no-p-history '("yes" "no" "yes" "no" "yes" "no" "yes"))
(setq buffer-name-history '(#("*scratch*" 0 9 (ivy-index 0)) "*test*" "custom-vars.el"))
(setq file-name-history '("~/.emacs.d/custom-vars.el" #("/Users/abhijeetsingh/.emacs.d/custom-vars.el" 0 44 (ivy-index 0)) #("/Users/abhijeetsingh/.emacs.d/" 0 30 (ivy-index 0)) "~/.emacs.d/package-list.el" "~/.emacs.d/pac" "~/.emacs.d/package-list.el" "~/.emacs.d/package-list.elj" #("/Users/abhijeetsingh/.emacs.d/init.el" 0 37 (ivy-index 0)) #("/Users/abhijeetsingh/.emacs.d/package-list.el" 0 45 (ivy-index 0)) #("/Users/abhijeetsingh/.emacs.d/images/" 0 37 (ivy-index 0)) #("/Users/abhijeetsingh/.emacs.d/bindings.el" 0 41 (ivy-index 0)) #("/home/ethan/.config/qtile/icons/" 0 32 (ivy-index 0)) #("/home/ethan/.emacs.d/bindings.el" 0 32 (ivy-index 0)) #("/home/ethan/.emacs.d/package-list.el" 0 36 (ivy-index 0)) "~/.emacs.d/init.el" "~/.emacs.d/init.el" "~/.emacs.d/package-list.el" "~/.emacs.d/init.el" "~/.zshrc" "/run/media/ethan/42e348a5-12d3-46e0-8315-8ce87e24bcdc/home/Tokens/TokenTillEternity" "~/.emacs.d/package-list.el" "~/.emacs.d/package-list.el" #("/home/ethan/.emacs.d/init.el" 0 28 (ivy-index 0)) "~/.emacs.d/package-list.el" "~/.emacs.d/init.el"))
(setq minibuffer-history '("me" "ivy-20220529.1130"))
(setq extended-command-history '("check-parens" "eval-buffer" "kill-buffer-and-window" "kill-buffer" "kill-buffer-and-window" "ibuffer" "delete-window" "kill-buffer" "ibuffer" "evil-mode" "kill-buffer-and-window" "kill-buffer" "ibuffer" "evil-mode" "comment-region" "eval-buffer" "doom-modeline-mode" "evil-mode" "eval-buffer" "comment-region" "comment-set-column" "eval-buffer" "package-delete" "eval-buffer" "package-delete"))
