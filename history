;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(regexp-history compile-history shell-command-history xref--read-identifier-history grep-find-history widget-browse-history query-replace-history swiper-history woman-topic-history counsel-descbinds-history counsel-git-grep-history empty-history read-number-history ivy-history counsel-describe-symbol-history counsel-M-x-history evil-ex-history minibuffer-history-search-history command-history read-expression-history yes-or-no-p-history buffer-name-history file-name-history minibuffer-history extended-command-history))
(setq regexp-history '("^[\\n]$" "^[\\r]$" "^[\\s].*$" "^[^\\S\\r\\n]*\\S" "^[\\s]*$" "^[\\s]*" "^[\\s]*$" "^\\s$" "\\s" "^\\s*" "^\\s-*$" "^$" " *" "\\s*" "[ ]*" "^[[:space:]]*" "\"\""))
(setq compile-history '("kotlinc hello.kt -include-runtime -d hello.jar && java -jar hello.jar" "kotlinc armstrong.kt -include-runtime -d armstrong.jar && java -jar armstrong.jar" "kotlinc armstrong.kt -include-runtime -d armstrong.jar"))
(setq shell-command-history '("echo \"Hi\"" "echo \"hI\"" "echo \"Hi\""))
(setq grep-find-history '("find . -type f -exec grep --color=auto -nH --null -e org-src \\{\\} +"))
(setq query-replace-history '("" "'noerror" "treemacs" "neotree"))
(setq swiper-history '(#("   \"/\" '(+consult/ripgrep :which-key \"+consult/ripgrep\")" 0 1 (display "30  " swiper-line-number 30 ivy-index 29) 1 3 (fontified t ivy-index 29) 3 6 (face font-lock-string-face fontified t ivy-index 29) 6 26 (fontified t ivy-index 29) 26 36 (face font-lock-builtin-face fontified t ivy-index 29) 36 37 (fontified t ivy-index 29) 37 55 (face font-lock-string-face fontified t ivy-index 29) 55 56 (fontified t ivy-index 29))))
(setq counsel-git-grep-history '(#("persp" 0 5 (ivy-index 0))))
(setq read-number-history '("1" "4" "3" "1" "2" "1" "9" "0" "1" "2" "1" "`" "2" "20" "10" "30" "2" "1" "2" "1" "2" "1" "2"))
(setq ivy-history '(#("kaolin-galaxy" 0 13 (ivy-index 270)) #("cyb" 0 3 (ivy-index 0)) "cyberpunk" #("base16-material" 0 15 (ivy-index 138)) #("base16-black-metal-burzum" 0 25 (ivy-index 30)) #("base16-black-metal-bathory" 0 26 (ivy-index 29)) #("base16-bespin" 0 13 (ivy-index 28)) #("base16-ayu-mirage" 0 17 (ivy-index 27)) #("base16-ayu-dark" 0 15 (ivy-index 25)) #("base16-atlas" 0 12 (ivy-index 24)) #("base16-black-metal-marduk" 0 25 (ivy-index 35)) #("base16-atelier-sulphurpool" 0 26 (ivy-index 23)) #("base16-atelier-seaside" 0 22 (ivy-index 21)) #("base16-atelier-savanna" 0 22 (ivy-index 19)) #("base16-atelier-plateau" 0 22 (ivy-index 17)) #("base16-atelier-lakeside" 0 23 (ivy-index 15)) #("base16-atelier-heath" 0 20 (ivy-index 13)) #("base16-atelier-forest" 0 21 (ivy-index 11)) #("base16-atelier-estuary" 0 22 (ivy-index 9)) #("base16-atelier-dune" 0 19 (ivy-index 7)) #("base16-atelier-cave" 0 19 (ivy-index 5)) #("base16-atelier-cave-light" 0 25 (ivy-index 4)) #("base16-ashes" 0 12 (ivy-index 3)) #("base16-apprentice" 0 17 (ivy-index 2)) #("package-list.el" 0 15 (ivy-index 3))))
(setq counsel-describe-symbol-history '(#("^treemacs--icon" 0 15 (ivy-index 0)) "treemacs--icon-size" #("^treemacs size" 0 14 (ivy-index 0)) "treemacs--icon-size" #("^" 0 1 (ivy-index 1)) "evil-find-file-at-point-visual" "evil-find-file-at-point-visual"))
(setq counsel-M-x-history '(#("^lsp" 0 4 (ivy-index 103)) "lsp" #("^dired-j" 0 8 (ivy-index 1)) "dired-jump" #("^check-" 0 7 (ivy-index 0)) "check-parens" "check-parens" "check-parens" #("^delete blan" 0 12 (ivy-index 0)) "delete-blank-lines" #("^delete-bl" 0 10 (ivy-index 0)) "delete-blank-lines" #("^flu" 0 4 (ivy-index 0)) "flush-lines" #("^flus" 0 5 (ivy-index 0)) "flush-lines" "flush-lines" "flush-lines" "flush-lines" #("^flush" 0 6 (ivy-index 0)) "flush-lines" "flush-lines" "flush-lines" "flush-lines" "flush-lines" "flush-lines"))
(setq evil-ex-history '(#("w" 0 1 (ex-index 1)) #("%s/lem-setup-splash/splash-setup/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34)) #("%s/lem-splash-screen/splash-screen/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36)) #("%s/lem-splash-mode/splash-mode/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2))))
(setq command-history '((lsp nil) (evil-find-char-to nil 104) (evil-find-char-to nil 32) (evil-find-char-to nil 104) (evil-find-char-to nil 32) (evil-delete 2066 2096 'line nil nil) (evil-delete 2066 2108 'line nil nil) (evil-delete 2066 2099 'line nil nil) (evil-delete 2066 2067 'line nil nil) (evil-delete 1973 1975 'exclusive nil nil) (evil-delete 1973 1974 'exclusive nil nil) (evil-delete 1973 1979 'exclusive nil nil) (evil-delete 8707 8708 'exclusive nil nil) (evil-delete 8707 8712 'exclusive nil nil) (evil-delete 8707 8708 'exclusive nil nil) (evil-delete 8707 8710 'exclusive nil nil) (evil-find-char-to nil 104) (evil-replace 18456 18457 'exclusive 109) (evil-delete 16588 16594 'exclusive nil nil) (evil-delete 16582 16593 'exclusive nil nil) (evil-delete 16582 16583 'exclusive nil nil) (evil-delete 16582 16589 'exclusive nil nil) (evil-delete 18411 18411 'line nil nil) (evil-delete 18411 18412 'line nil nil) (evil-delete 18412 18440 'line nil nil)))
(setq read-expression-history '("(straight--installed-p \"general\")" "(vertico-mode t)" "(straight--installed-p \"general\")" "(straight--installed-p general)" "(straight--installed-p 'evil)" "(straight--installedp)" "straight--installed-p" "(straight--installed-p general)" "(straight--installed-p 'general)" "(straight--installed-p general)" "(straight-installed-p general)" "(eval-buffer init.el)" "(eval-buffer \"init.el\")" "(load-file init.el)" "(load-theme 'darkokai t)"))
(setq yes-or-no-p-history '("yes" "no" "yes" "ys" "yes" "no" "yes" "ys" "yes" "no" "yes" ":q" "yes" "no" "yes" "no" "yes" "dyes" "yes" "no" "yes" "no" "yes" "no" "yes"))
(setq buffer-name-history '("term2" "bindings.el" "messages" #("*scratch*" 0 9 (ivy-index 0)) "*test*" "custom-vars.el"))
(setq file-name-history '(#("/Users/abhijeetsingh/.emacs.d/images/lambda-splash.txt" 0 54 (ivy-index 0)) #("/Users/abhijeetsingh/.emacs.d/splash.el" 0 39 (ivy-index 0)) #("/Users/abhijeetsingh/.emacs.d/custom-vars.el" 0 44 (ivy-index 0)) #("/Users/abhijeetsingh/.emacs.d/bindings.el" 0 41 (ivy-index 0)) #("/Users/abhijeetsingh/Projects/Extra/py/" 0 39 (ivy-index 0)) #("/Users/abhijeetsingh/Projects/Extra/py/Project Jarvis.py" 0 56 (ivy-index 0)) #("/Users/abhijeetsingh/.emacs.d/package-list.el" 0 45 (ivy-index 23)) #("/Users/abhijeetsingh/.emacs.d/lsp.el" 0 36 (ivy-index 23)) #("/Users/abhijeetsingh/.emacs.d/init.el" 0 37 (ivy-index 0)) #("/Users/abhijeetsingh/Projects/IdeaProjects/helloWorld/src/main/kotlin/armstrong.kt" 0 82 (ivy-index 1)) #("/Users/abhijeetsingh/Projects/IdeaProjects/helloWorld/" 0 54 (ivy-index 1)) #("/home/ethan/.emacs.d/package-list.el" 0 36 (ivy-index 0)) #("/home/ethan/.emacs.d/bindings.el" 0 32 (ivy-index 0)) #("/home/ethan/Projects/IdeaProjects/hello/src/main/kotlin/hello.kt" 0 64 (ivy-index 0)) #("/home/ethan/Projects/IdeaProjects/hello/src/main/kotlin/.dir-locals.el" 0 70 (ivy-index 4)) #("/home/ethan/Projects/IdeaProjects/hello/src/main/kotlin/dir-locals.el" 0 69 (ivy-index 0)) #("/home/ethan/Projects/IdeaProjects/hello/src/main/" 0 49 (ivy-index 0)) #("/home/ethan/.emacs.d/init.el" 0 28 (ivy-index 0)) #("/home/ethan/.config/qtile/config.py" 0 35 (ivy-index 0)) #("/home/ethan/.emacs.d/custom-vars.el" 0 35 (ivy-index 0)) #("/Users/abhijeetsingh/.emacs.d/#lsp.el#" 0 38 (ivy-index 0)) #("/Users/abhijeetsingh/.emacs.d/" 0 30 (ivy-index 0)) #("/Users/abhijeetsingh/Projects/Org/Sem5.org" 0 42 (ivy-index 0)) #("~/Projects/Org/" 0 15 (ivy-index 0)) #("/Users/abhijeetsingh/Projects/Org/todo.org" 0 42 (ivy-index 0))))
(setq minibuffer-history '("doom-henna" "https://github.com/Ethan0456/Wallpapers.git" "https://hlzmel.fsmg.org.nz/kali/README" "me" "ivy-20220529.1130"))
(setq extended-command-history '("describe-variable" "check-parens" "load-theme" "find-grep" "finder-by-keyword" "query-replace" "check-parens" "comment-region" "check-parens" "eval-buffer" "kill-buffer-and-window" "kill-buffer" "kill-buffer-and-window" "ibuffer" "delete-window" "kill-buffer" "ibuffer" "evil-mode" "kill-buffer-and-window" "kill-buffer" "ibuffer" "evil-mode" "comment-region" "eval-buffer" "doom-modeline-mode"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("/Users/abhijeetsingh/" (0 0 . [nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil]))))
(setq evil-jumps-history '((1 "/Users/abhijeetsingh/.emacs.d/init.el~") (18012 "/Users/abhijeetsingh/.emacs.d/package-list.el") (17741 "/Users/abhijeetsingh/.emacs.d/package-list.el") (2697 "/Users/abhijeetsingh/.emacs.d/custom-vars.el") (2026 "/Users/abhijeetsingh/.emacs.d/custom-vars.el") (2066 "/Users/abhijeetsingh/.emacs.d/init.el") (2066 "/Users/abhijeetsingh/.emacs.d/init.el") (5220 "/Users/abhijeetsingh/.emacs.d/images/lambda-splash.txt") (2066 "/Users/abhijeetsingh/.emacs.d/init.el") (17741 "/Users/abhijeetsingh/.emacs.d/package-list.el") (17501 "/Users/abhijeetsingh/.emacs.d/package-list.el") (16600 "/Users/abhijeetsingh/.emacs.d/package-list.el") (16664 "/Users/abhijeetsingh/.emacs.d/package-list.el") (2026 "/Users/abhijeetsingh/.emacs.d/custom-vars.el") (2307 "/Users/abhijeetsingh/.emacs.d/custom-vars.el") (2697 "/Users/abhijeetsingh/.emacs.d/custom-vars.el") (1 "/Users/abhijeetsingh/.emacs.d/custom-vars.el") (574 "/Users/abhijeetsingh/.emacs.d/custom-vars.el") (17399 "/Users/abhijeetsingh/.emacs.d/package-list.el")))
