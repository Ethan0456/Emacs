;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(compile-history shell-command-history xref--read-identifier-history grep-find-history widget-browse-history query-replace-history swiper-history woman-topic-history counsel-descbinds-history counsel-git-grep-history empty-history read-number-history ivy-history counsel-describe-symbol-history counsel-M-x-history evil-ex-history minibuffer-history-search-history command-history read-expression-history yes-or-no-p-history buffer-name-history file-name-history minibuffer-history extended-command-history))
(setq compile-history '("kotlinc armstrong.kt -include-runtime -d armstrong.jar && java -jar armstrong.jar" "kotlinc armstrong.kt -include-runtime -d armstrong.jar"))
(setq shell-command-history '("echo \"Hi\"" "echo \"hI\"" "echo \"Hi\""))
(setq grep-find-history '("find . -type f -exec grep --color=auto -nH --null -e org-src \\{\\} +"))
(setq query-replace-history '("" "'noerror" "treemacs" "neotree"))
(setq swiper-history '(#("   \"/\" '(+consult/ripgrep :which-key \"+consult/ripgrep\")" 0 1 (ivy-index 29 swiper-line-number 30 display "30  ") 1 3 (ivy-index 29 fontified t) 3 6 (ivy-index 29 fontified t face font-lock-string-face) 6 26 (ivy-index 29 fontified t) 26 36 (ivy-index 29 fontified t face font-lock-builtin-face) 36 37 (ivy-index 29 fontified t) 37 55 (ivy-index 29 fontified t face font-lock-string-face) 55 56 (ivy-index 29 fontified t))))
(setq counsel-git-grep-history '(#("persp" 0 5 (ivy-index 0))))
(setq read-number-history '("1" "4" "3" "1" "2" "1" "9" "0" "1" "2" "1" "`" "2" "20" "10" "30" "2" "1" "2" "1" "2" "1" "2"))
(setq ivy-history '(#("moon" 0 4 (ivy-index 0)) "doom-moonlight" #("emacs-kooten" 0 12 (ivy-index 0)) #("packages.el" 0 11 (ivy-index 0)) #("custom-theme-load-path" 0 22 (ivy-index 1)) #("henna" 0 5 (ivy-index 0)) "doom-henna" #("mis" 0 3 (ivy-index 0)) "misterioso" #("emacs-monokai" 0 13 (ivy-index 17)) #("city" 0 4 (ivy-index 0)) "doom-city-lights" #("deeper-blue" 0 11 (ivy-index 1)) #("adwaita" 0 7 (ivy-index 0)) #("doom-city-lights" 0 16 (ivy-index 31)) #("doom-sourcerer" 0 14 (ivy-index 81)) #("leuven" 0 6 (ivy-index 77)) #("rebecca" 0 7 (ivy-index 5)) #("lorisan" 0 7 (ivy-index 4)) #("humanoid-dark" 0 13 (ivy-index 2)) #("lori" 0 4 (ivy-index 0)) #("rebe" 0 4 (ivy-index 0)) #("kooten" 0 6 (ivy-index 0)) #("hu" 0 2 (ivy-index 0)) #("lor" 0 3 (ivy-index 0)) #("sh" 0 2 (ivy-index 0))))
(setq counsel-describe-symbol-history '(#("^treemacs--icon" 0 15 (ivy-index 0)) "treemacs--icon-size" #("^treemacs size" 0 14 (ivy-index 0)) "treemacs--icon-size" #("^" 0 1 (ivy-index 1)) "evil-find-file-at-point-visual" "evil-find-file-at-point-visual"))
(setq counsel-M-x-history '(#("^counsel-load-th" 0 16 (ivy-index 0)) "counsel-load-theme" "counsel-load-theme" #("^" 0 1 (ivy-index 0)) "savehist-mode" #("^savehis" 0 8 (ivy-index 0)) "savehist-mode" #("cd" 0 2 (ivy-index 2)) #("^load" 0 5 (ivy-index 1)) "load-theme" #("^smex" 0 5 (ivy-index 0)) "smex" #("^rainbow" 0 8 (ivy-index 0)) "rainbow-mode" #("^counsel theme" 0 14 (ivy-index 0)) "counsel-load-theme" #("^check-p" 0 8 (ivy-index 0)) "check-parens" #("^check par" 0 10 (ivy-index 0)) "check-parens" #("^comment-re" 0 11 (ivy-index 0)) "comment-region" #("^counsel-load-theme" 0 19 (ivy-index 0)) "counsel-load-theme" #("^counsel-load" 0 13 (ivy-index 1))))
(setq evil-ex-history '(#("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("'<,'>q" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("'<,'>y" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("list-packa" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10)) #("eval-expression" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("'<,'>q" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("'<,'>y" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6))))
(setq command-history '((counsel-load-theme) (counsel-load-theme) (savehist-mode 'toggle) (savehist-mode 'toggle) (evil-record-macro 10) (evil-record-macro 58) (load-theme 'emacs-kooten nil nil) (smex) (evil-delete 2058 2060 'exclusive nil nil) (evil-delete 2058 2059 'exclusive nil nil) (evil-delete 2058 2062 'exclusive nil nil) (evil-delete 2058 2059 'exclusive nil nil) (evil-delete 2058 2065 'exclusive nil nil) (evil-change 1997 2004 'inclusive nil nil) (evil-delete 1 2659 'line nil nil) (evil-delete 1 2659 'line nil nil) (evil-record-macro 113) (find-file "~/.emacs.d/package-list.el" t) (find-file "~/.emacs.d/packages.el" t) (find-file "~/.emacs.d/bindings.el" t) (find-file "~/.emacs.d/init.el" t) (execute-extended-command nil "describe-variable" "describe-varia") (find-file "~/.emacs.d/bindings.el" t) (switch-to-buffer "bindings.el" nil 'force-same-window) (switch-to-buffer "messages" nil 'force-same-window)))
(setq read-expression-history '("(eval-buffer init.el)" "(eval-buffer \"init.el\")" "(load-file init.el)" "(load-theme 'darkokai t)"))
(setq yes-or-no-p-history '("yes" "no" "yes" ":q" "yes" "no" "yes" "no" "yes" "dyes" "yes" "no" "yes" "no" "yes" "no" "yes" "no" "yes" "no" "yes" "no" "yes"))
(setq buffer-name-history '("bindings.el" "messages" #("*scratch*" 0 9 (ivy-index 0)) "*test*" "custom-vars.el"))
(setq file-name-history '(#("/Users/abhijeetsingh/.emacs.d/package-list.el~" 0 46 (ivy-index 0)) #("/Users/abhijeetsingh/.emacs.d/package-list.el" 0 45 (ivy-index 0)) "~/.emacs.d/package-list.el" "~/.emacs.d/packages.el" "~/.emacs.d/bindings.el" "~/.emacs.d/init.el" "~/.emacs.d/bindings.el" #("/Users/abhijeetsingh/.emacs.d/bindings.el" 0 41 (ivy-index 0)) #("/Users/abhijeetsingh/.emacs.d/config.el" 0 39 (ivy-index 0)) #("/Users/abhijeetsingh/.emacs.d/packages.el" 0 41 (ivy-index 0)) #("/Users/abhijeetsingh/.emacs.d/snippets/kotlin-mode/fun" 0 54 (ivy-index 8)) #("/Users/abhijeetsingh/.emacs.d/snippets/kotlin-mode/main" 0 55 (ivy-index 0)) #("/Users/abhijeetsingh/.emacs.d/snippets/kotlin-mode/for" 0 54 (ivy-index 0)) #("/Users/abhijeetsingh/.emacs.d/custom-vars.el" 0 44 (ivy-index 1)) #("/Users/abhijeetsingh/.emacs.d/snippets/doom-snippets.el" 0 55 (ivy-index 1)) #("/Users/abhijeetsingh/Projects/IdeaProjects/helloWorld/src/main/kotlin/" 0 70 (ivy-index 0)) #("/Users/abhijeetsingh/.emacs.d/#custom-vars.el#" 0 46 (ivy-index 0)) #("/Users/abhijeetsingh/.emacs.d/lsp.el" 0 36 (ivy-index 1)) #("/Users/abhijeetsingh/.emacs.d/kotlin/" 0 37 (ivy-index 0)) #("/Users/abhijeetsingh/Projects/IdeaProjects/helloWorld/src/main/kotlin/armstrong.kt" 0 82 (ivy-index 0)) #("/Users/abhijeetsingh/.emacs.d/init.el" 0 37 (ivy-index 0)) #("/Users/abhijeetsingh/.emacs.d/" 0 30 (ivy-index 7)) #("/Users/abhijeetsingh/Projects/IdeaProjects/helloWorld/src/main/kotlin/helloWorld.kt" 0 83 (ivy-index 0)) #("/Users/abhijeetsingh/Projects/Extra/c/digitfactorial.c" 0 54 (ivy-index 2)) #("/Users/abhijeetsingh/Projects/git-repos/qtile/libqtile/widget/" 0 62 (ivy-index 0))))
(setq minibuffer-history '("doom-henna" "https://github.com/Ethan0456/Wallpapers.git" "https://hlzmel.fsmg.org.nz/kali/README" "me" "ivy-20220529.1130"))
(setq extended-command-history '("describe-variable" "check-parens" "load-theme" "find-grep" "finder-by-keyword" "query-replace" "check-parens" "comment-region" "check-parens" "eval-buffer" "kill-buffer-and-window" "kill-buffer" "kill-buffer-and-window" "ibuffer" "delete-window" "kill-buffer" "ibuffer" "evil-mode" "kill-buffer-and-window" "kill-buffer" "ibuffer" "evil-mode" "comment-region" "eval-buffer" "doom-modeline-mode"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
(setq evil-jumps-history '((1040 "/Users/abhijeetsingh/.emacs.d/packages.el") (1040 "/Users/abhijeetsingh/.emacs.d/packages.el") (6873 "/Users/abhijeetsingh/.emacs.d/history") (2066 "/Users/abhijeetsingh/.emacs.d/init.el") (1018 "/Users/abhijeetsingh/.emacs.d/packages.el")))
